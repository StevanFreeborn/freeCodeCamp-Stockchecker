const mongoose = require('mongoose');

const stockSchemaOptions = {
    timestamps: true,
}
const StockSchema = mongoose.Schema({
    stock: { type: String, trim: true},
    likes: [String],
    avgTotalVolume: { type: Number, },
    calculationPrice: { type: String, trim: true, },
    change: { type: Number, },
    changePercent: { type: Number, },
    close: { type: Number, },
    closeSource: { type: String, trim: true, },
    closeTime: { type: Number, },
    companyName: { type: String, trim: true, },
    currency: { type: String, trim: true, },
    delayedPrice: { type: Number, },
    delayedPriceTime: { type: Number, },
    extendedChange: { type: Number, },
    extendedChangePercent: { type: Number, },
    extendedPrice: { type: Number, },
    extendedPriceTime: { type: Number, },
    high: { type: Number, },
    highSource: { type: String, trim: true, },
    highTime: { type: Number, },
    iexAskPrice: { type: Number, },
    iexAskSize: { type: Number, },
    iexBidPrice: { type: Number, },
    iexBidSize: { type: Number, },
    iexClose: { type: Number, },
    iexCloseTime: { type: Number, },
    iexLastUpdated: { type: Number, },
    iexMarketPercent: { type: Number, },
    iexOpen: { type: Number, },
    iexOpenTime: { type: Number, },
    iexRealtimePrice: { type: Number, },
    iexRealtimeSize: { type: Number, },
    iexVolume: { type: Number, },
    lastTradeTime: { type: Number, },
    latestPrice: { type: Number, },
    latestSource: { type: String, trim: true, },
    latestTime: { type: String, trim: true, },
    latestUpdate: { type: Number, },
    latestVolume: { type: Number, },
    low: { type: Number, },
    lowSource: { type: String, trim: true, },
    lowTime: { type: Number, },
    marketCap: { type: Number, },
    oddLotDelayedPrice: { type: Number, },
    oddLotDelayedPriceTime: { type: Number, },
    open: { type: Number, },
    openTime: { type: Number, },
    openSource: { type: String, trim: true, },
    peRatio: { type: Number, },
    previousClose: { type: Number, },
    previousVolume: { type: Number, },
    primaryExchange: { type: String, trim: true, },
    symbol: { type: String, trim: true, },
    volume: { type: Number, },
    week52High: { type: Number, },
    week52Low: { type: Number, },
    ytdChange: { type: Number, },
    isUSMarketOpen: { type: Boolean, },
}, stockSchemaOptions);

const Stock = mongoose.model('stocks', StockSchema);

module.exports = Stock;